(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1237:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(438);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(1261)],module)}.call(this,__webpack_require__(1238)(module))},1261:function(module,exports,__webpack_require__){var map={"./Examples.stories.tsx":1266};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1261},1266:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"BasicTree",(function(){return BasicTree})),__webpack_require__.d(__webpack_exports__,"ComplexTree",(function(){return ComplexTree})),__webpack_require__.d(__webpack_exports__,"HooksTree",(function(){return HooksTree})),__webpack_require__.d(__webpack_exports__,"PassedDataTree",(function(){return PassedDataTree})),__webpack_require__.d(__webpack_exports__,"PassedDataTreeWithBack",(function(){return PassedDataTreeWithBack}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),tslib_es6=__webpack_require__(62),WizardContext=react_default.a.createContext({tree:{},step:"",getControls:function(){return{}},data:{},back:function(){}});function reducer(state,action){switch(action.type){case"SET_STEP":return Object(tslib_es6.a)(Object(tslib_es6.a)({},state),{history:Object(tslib_es6.b)([state.active],state.history),active:{step:action.step,data:action.data}});case"STEP_BACK":var _a=state.history,previous=_a[0],history=_a.slice(1);return Object(tslib_es6.a)(Object(tslib_es6.a)({},state),{active:{step:previous.step,data:action.data},history:history});default:return state}}function Wizard(_a){var children=_a.children,tree=_a.tree,first=_a.first,_b=_a.initialData,initialData=void 0===_b?null:_b,_c=react_default.a.useReducer(reducer,{active:{step:first,data:initialData||void 0},history:[]}),_d=_c[0].active,step=_d.step,data=_d.data,dispatch=_c[1];react_default.a.useEffect((function(){Object.keys(tree).includes(first)||console.warn("First step "+first+" is now found in tree as key")}),[first,tree]),react_default.a.useEffect((function(){var allSteps=Object.keys(tree);Object.entries(tree).forEach((function(_a){var key=_a[0];_a[1].forEach((function(d){allSteps.includes(d)||console.warn("Tree definition includes path to "+d+" from "+key+". However "+d+" is not in tree as a key.")}))}))}),[tree]);return react_default.a.createElement(WizardContext.Provider,{value:{tree:tree,step:step,back:function(backData){dispatch({type:"STEP_BACK",data:backData||data})},getControls:function(){return tree[step].reduce((function(accum,step){var _a,next=((_a={})[step]=function(data){dispatch({type:"SET_STEP",step:step,data:data})},_a);return Object(tslib_es6.a)(Object(tslib_es6.a)({},accum),next)}),{})},data:data}},children)}try{Wizard.displayName="Wizard",Wizard.__docgenInfo={description:"Declarative Wizard component for React.\n@param props Takes in a tree, the first step of the wizard, and children.",displayName:"Wizard",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Wizard.tsx#Wizard"]={docgenInfo:Wizard.__docgenInfo,name:"Wizard",path:"src/Wizard.tsx#Wizard"})}catch(__react_docgen_typescript_loader_error){}function useControls(){var _a=react_default.a.useContext(WizardContext),getControls=_a.getControls,step=_a.step,tree=_a.tree,data=_a.data,back=_a.back;return{step:step,tree:tree,destinations:getControls(),data:data||void 0,back:function(newData){back(newData)}}}function Controls(_a){var children=_a.children,getControls=useControls();return react_default.a.createElement(react_default.a.Fragment,null,children(Object(tslib_es6.a)({},getControls)))}try{useControls.displayName="useControls",useControls.__docgenInfo={description:"A react hook that exposes the current step, possible destinations, passed data, and the tree\nbeing used. Destinations is an object where the keys are possible destinations and the values are\nfunctions to move the wizard there.",displayName:"useControls",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Controls.tsx#useControls"]={docgenInfo:useControls.__docgenInfo,name:"useControls",path:"src/Controls.tsx#useControls"})}catch(__react_docgen_typescript_loader_error){}try{Controls.displayName="Controls",Controls.__docgenInfo={description:"Controls React Component\n@param ChildrenRenderProp Children is a function that exposes the current step, possible destinations,\npassed data, and the tree being used. Destinations is an object where the keys are possible destinations\nand the values are functions to move the wizard there.",displayName:"Controls",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Controls.tsx#Controls"]={docgenInfo:Controls.__docgenInfo,name:"Controls",path:"src/Controls.tsx#Controls"})}catch(__react_docgen_typescript_loader_error){}function Step(_a){var children=_a.children,name=_a.name,_b=useControls(),step=_b.step,tree=_b.tree;return react_default.a.useEffect((function(){Object.keys(tree).includes(name)||console.warn("Step component with name "+name+" is not found in step tree!")}),[name,tree]),react_default.a.createElement(react_default.a.Fragment,null,step===name&&children)}try{Step.displayName="Step",Step.__docgenInfo={description:"A Step to be used in the Wizard component. Will only be rendered if the name is the active step\n@param props name of the step and children.",displayName:"Step",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"keyof T"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Step.tsx#Step"]={docgenInfo:Step.__docgenInfo,name:"Step",path:"src/Step.tsx#Step"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__(424).withSource;var addSourceDecorator=__webpack_require__(424).addSource,__SOURCE_PREFIX__="/home/rjerue/react-decision-tree-flow/stories",__STORY__="import React from 'react';\nimport { Wizard, Step, Controls, useControls } from '../src/';\n\nexport default {\n  title: 'Examples',\n};\n\nexport const BasicTree = () => {\n  const tree = {\n    step1: ['step2'],\n    step2: ['step3', 'error'],\n    step3: ['step1'],\n    error: ['step2'],\n  } as const;\n\n  return (\n    <Wizard tree={tree} first=\"step1\">\n      <Step name=\"step1\">\n        <div>\n          I am step 1\n          <br />\n          <Controls>\n            {({ destinations: { step2 } }) => (\n              <button onClick={step2}>Go to Step 2</button>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step2\">\n        <div>\n          I am step 2\n          <br />\n          <Controls>\n            {({ destinations: { step3, error } }) => (\n              <div>\n                <button onClick={error}>Go to error</button>\n                <button onClick={step3}>Go to Step 3</button>\n              </div>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step3\">\n        <div>\n          I am step 3\n          <br />\n          <Controls>\n            {({ destinations: { step1 } }) => (\n              <button onClick={step1}>Go to Step 1</button>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"error\">\n        <div>\n          I am step 4\n          <br />\n          <Controls>\n            {({ destinations: { step2 } }) => (\n              <button onClick={step2}>Go to Step 2</button>\n            )}\n          </Controls>\n        </div>\n      </Step>\n    </Wizard>\n  );\n};\n\nexport const ComplexTree = () => {\n  const tree = {\n    step1: ['step2', 'sideshow'],\n    sideshow: ['step2', 'step3'],\n    step2: ['step3', 'error'],\n    step3: ['step1'],\n    error: ['step2'],\n  };\n  return (\n    <div>\n      <Wizard first=\"step1\" tree={tree}>\n        {Object.keys(tree).map(key => (\n          <Step name={key} key={key}>\n            <Controls>\n              {({ tree, step, destinations }) => {\n                return (\n                  <div>\n                    I am {step}\n                    <br />\n                    {Object.entries(destinations).map(([key, value]) => (\n                      <button key={key} onClick={value}>\n                        GO TO {key}\n                      </button>\n                    ))}\n                  </div>\n                );\n              }}\n            </Controls>\n          </Step>\n        ))}\n      </Wizard>\n    </div>\n  );\n};\n\nexport const HooksTree = () => {\n  const inTree = {\n    step1: ['step2', 'sideshow'],\n    sideshow: ['step2', 'step3'],\n    step2: ['step3', 'error'],\n    step3: ['step1'],\n    error: ['step2'],\n  } as const;\n\n  const StepComp = ({ value }) => {\n    const { step, tree, destinations } = useControls<typeof inTree>();\n    return (\n      <Step name={value}>\n        <div>\n          I am {step}\n          <br />\n          {Object.entries(destinations).map(([key, value]) => (\n            <button key={key} onClick={value}>\n              GO TO {key}\n            </button>\n          ))}\n        </div>\n      </Step>\n    );\n  };\n  return (\n    <Wizard first=\"step1\" tree={inTree}>\n      {Object.keys(inTree).map(key => (\n        <StepComp key={key} value={key} />\n      ))}\n    </Wizard>\n  );\n};\n\nexport const PassedDataTree = () => {\n  const tree = {\n    step1: ['step2'],\n    step2: ['step3'],\n    step3: ['step1'],\n  } as const;\n\n  return (\n    <Wizard tree={tree} first=\"step1\" initialData={1}>\n      <Step name=\"step1\">\n        <div>\n          I am step 1\n          <br />\n          <Controls>\n            {({ destinations: { step2 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step2((data as number) + 1);\n                  }}\n                >\n                  Go to Step 1\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step2\">\n        <div>\n          I am step 2\n          <br />\n          <Controls>\n            {({ destinations: { step3 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step3((data as number) + 1);\n                  }}\n                >\n                  Go to Step 3\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step3\">\n        <div>\n          I am step 3\n          <br />\n          <Controls>\n            {({ destinations: { step1 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step1((data as number) + 1);\n                  }}\n                >\n                  Go to Step 1\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n    </Wizard>\n  );\n};\n\nexport const PassedDataTreeWithBack = () => {\n  const tree = {\n    step1: ['step2'],\n    step2: ['step3', 'stepX'],\n    stepX: [],\n    step3: [],\n  } as const;\n\n  return (\n    <Wizard tree={tree} first=\"step1\" initialData={1}>\n      <div>The last lazer master</div>\n      <Step name=\"step1\">\n        <div>\n          I am step 1\n          <br />\n          <Controls>\n            {({ destinations: { step2 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step2((data as number) + 1);\n                  }}\n                >\n                  Go to Step 2\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step2\">\n        <div>\n          I am step 2\n          <br />\n          <Controls>\n            {({ destinations: { step3, stepX }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step3((data as number) + 1);\n                  }}\n                >\n                  Go to Step 3\n                </button>\n                <button\n                  onClick={() => {\n                    stepX((data as number) + 1);\n                  }}\n                >\n                  Go to Step X\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"stepX\">\n        <div>\n          I am step X\n          <br />\n          <Controls>\n            {({ data, back }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    back(999);\n                  }}\n                >\n                  Go back\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step3\">\n        <div>\n          I am step 3\n          <br />\n          <Controls>\n            {({ data, back }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    back();\n                  }}\n                >\n                  Go to Step 1\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n    </Wizard>\n  );\n};\n",__ADDS_MAP__={"examples--basic-tree":{startLoc:{col:25,line:8},endLoc:{col:1,line:67},startBody:{col:25,line:8},endBody:{col:1,line:67}},"examples--complex-tree":{startLoc:{col:27,line:69},endLoc:{col:1,line:102},startBody:{col:27,line:69},endBody:{col:1,line:102}},"examples--hooks-tree":{startLoc:{col:25,line:104},endLoc:{col:1,line:136},startBody:{col:25,line:104},endBody:{col:1,line:136}},"examples--passed-data-tree":{startLoc:{col:30,line:138},endLoc:{col:1,line:209},startBody:{col:30,line:138},endBody:{col:1,line:209}},"examples--passed-data-tree-with-back":{startLoc:{col:38,line:211},endLoc:{col:1,line:311},startBody:{col:38,line:211},endBody:{col:1,line:311}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},BasicTree=(__webpack_exports__.default={parameters:{storySource:{source:"import React from 'react';\nimport { Wizard, Step, Controls, useControls } from '../src/';\n\nexport default {\n  title: 'Examples',\n};\n\nexport const BasicTree = () => {\n  const tree = {\n    step1: ['step2'],\n    step2: ['step3', 'error'],\n    step3: ['step1'],\n    error: ['step2'],\n  } as const;\n\n  return (\n    <Wizard tree={tree} first=\"step1\">\n      <Step name=\"step1\">\n        <div>\n          I am step 1\n          <br />\n          <Controls>\n            {({ destinations: { step2 } }) => (\n              <button onClick={step2}>Go to Step 2</button>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step2\">\n        <div>\n          I am step 2\n          <br />\n          <Controls>\n            {({ destinations: { step3, error } }) => (\n              <div>\n                <button onClick={error}>Go to error</button>\n                <button onClick={step3}>Go to Step 3</button>\n              </div>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step3\">\n        <div>\n          I am step 3\n          <br />\n          <Controls>\n            {({ destinations: { step1 } }) => (\n              <button onClick={step1}>Go to Step 1</button>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"error\">\n        <div>\n          I am step 4\n          <br />\n          <Controls>\n            {({ destinations: { step2 } }) => (\n              <button onClick={step2}>Go to Step 2</button>\n            )}\n          </Controls>\n        </div>\n      </Step>\n    </Wizard>\n  );\n};\n\nexport const ComplexTree = () => {\n  const tree = {\n    step1: ['step2', 'sideshow'],\n    sideshow: ['step2', 'step3'],\n    step2: ['step3', 'error'],\n    step3: ['step1'],\n    error: ['step2'],\n  };\n  return (\n    <div>\n      <Wizard first=\"step1\" tree={tree}>\n        {Object.keys(tree).map(key => (\n          <Step name={key} key={key}>\n            <Controls>\n              {({ tree, step, destinations }) => {\n                return (\n                  <div>\n                    I am {step}\n                    <br />\n                    {Object.entries(destinations).map(([key, value]) => (\n                      <button key={key} onClick={value}>\n                        GO TO {key}\n                      </button>\n                    ))}\n                  </div>\n                );\n              }}\n            </Controls>\n          </Step>\n        ))}\n      </Wizard>\n    </div>\n  );\n};\n\nexport const HooksTree = () => {\n  const inTree = {\n    step1: ['step2', 'sideshow'],\n    sideshow: ['step2', 'step3'],\n    step2: ['step3', 'error'],\n    step3: ['step1'],\n    error: ['step2'],\n  } as const;\n\n  const StepComp = ({ value }) => {\n    const { step, tree, destinations } = useControls<typeof inTree>();\n    return (\n      <Step name={value}>\n        <div>\n          I am {step}\n          <br />\n          {Object.entries(destinations).map(([key, value]) => (\n            <button key={key} onClick={value}>\n              GO TO {key}\n            </button>\n          ))}\n        </div>\n      </Step>\n    );\n  };\n  return (\n    <Wizard first=\"step1\" tree={inTree}>\n      {Object.keys(inTree).map(key => (\n        <StepComp key={key} value={key} />\n      ))}\n    </Wizard>\n  );\n};\n\nexport const PassedDataTree = () => {\n  const tree = {\n    step1: ['step2'],\n    step2: ['step3'],\n    step3: ['step1'],\n  } as const;\n\n  return (\n    <Wizard tree={tree} first=\"step1\" initialData={1}>\n      <Step name=\"step1\">\n        <div>\n          I am step 1\n          <br />\n          <Controls>\n            {({ destinations: { step2 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step2((data as number) + 1);\n                  }}\n                >\n                  Go to Step 1\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step2\">\n        <div>\n          I am step 2\n          <br />\n          <Controls>\n            {({ destinations: { step3 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step3((data as number) + 1);\n                  }}\n                >\n                  Go to Step 3\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step3\">\n        <div>\n          I am step 3\n          <br />\n          <Controls>\n            {({ destinations: { step1 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step1((data as number) + 1);\n                  }}\n                >\n                  Go to Step 1\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n    </Wizard>\n  );\n};\n\nexport const PassedDataTreeWithBack = () => {\n  const tree = {\n    step1: ['step2'],\n    step2: ['step3', 'stepX'],\n    stepX: [],\n    step3: [],\n  } as const;\n\n  return (\n    <Wizard tree={tree} first=\"step1\" initialData={1}>\n      <div>The last lazer master</div>\n      <Step name=\"step1\">\n        <div>\n          I am step 1\n          <br />\n          <Controls>\n            {({ destinations: { step2 }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step2((data as number) + 1);\n                  }}\n                >\n                  Go to Step 2\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step2\">\n        <div>\n          I am step 2\n          <br />\n          <Controls>\n            {({ destinations: { step3, stepX }, data }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    step3((data as number) + 1);\n                  }}\n                >\n                  Go to Step 3\n                </button>\n                <button\n                  onClick={() => {\n                    stepX((data as number) + 1);\n                  }}\n                >\n                  Go to Step X\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"stepX\">\n        <div>\n          I am step X\n          <br />\n          <Controls>\n            {({ data, back }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    back(999);\n                  }}\n                >\n                  Go back\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n      <Step name=\"step3\">\n        <div>\n          I am step 3\n          <br />\n          <Controls>\n            {({ data, back }) => (\n              <>\n                <div>You have been to {data} steps.</div>\n                <button\n                  onClick={() => {\n                    back();\n                  }}\n                >\n                  Go to Step 1\n                </button>\n              </>\n            )}\n          </Controls>\n        </div>\n      </Step>\n    </Wizard>\n  );\n};\n",locationsMap:{"examples--basic-tree":{startLoc:{col:25,line:8},endLoc:{col:1,line:67},startBody:{col:25,line:8},endBody:{col:1,line:67}},"examples--complex-tree":{startLoc:{col:27,line:69},endLoc:{col:1,line:102},startBody:{col:27,line:69},endBody:{col:1,line:102}},"examples--hooks-tree":{startLoc:{col:25,line:104},endLoc:{col:1,line:136},startBody:{col:25,line:104},endBody:{col:1,line:136}},"examples--passed-data-tree":{startLoc:{col:30,line:138},endLoc:{col:1,line:209},startBody:{col:30,line:138},endBody:{col:1,line:209}},"examples--passed-data-tree-with-back":{startLoc:{col:38,line:211},endLoc:{col:1,line:311},startBody:{col:38,line:211},endBody:{col:1,line:311}}}}},title:"Examples"},addSourceDecorator((function(){return react_default.a.createElement(Wizard,{tree:{step1:["step2"],step2:["step3","error"],step3:["step1"],error:["step2"]},first:"step1"},react_default.a.createElement(Step,{name:"step1"},react_default.a.createElement("div",null,"I am step 1",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step2=_a.destinations.step2;return react_default.a.createElement("button",{onClick:step2},"Go to Step 2")})))),react_default.a.createElement(Step,{name:"step2"},react_default.a.createElement("div",null,"I am step 2",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var _b=_a.destinations,step3=_b.step3,error=_b.error;return react_default.a.createElement("div",null,react_default.a.createElement("button",{onClick:error},"Go to error"),react_default.a.createElement("button",{onClick:step3},"Go to Step 3"))})))),react_default.a.createElement(Step,{name:"step3"},react_default.a.createElement("div",null,"I am step 3",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step1=_a.destinations.step1;return react_default.a.createElement("button",{onClick:step1},"Go to Step 1")})))),react_default.a.createElement(Step,{name:"error"},react_default.a.createElement("div",null,"I am step 4",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step2=_a.destinations.step2;return react_default.a.createElement("button",{onClick:step2},"Go to Step 2")})))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Examples.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})),ComplexTree=addSourceDecorator((function(){var tree={step1:["step2","sideshow"],sideshow:["step2","step3"],step2:["step3","error"],step3:["step1"],error:["step2"]};return react_default.a.createElement("div",null,react_default.a.createElement(Wizard,{first:"step1",tree:tree},Object.keys(tree).map((function(key){return react_default.a.createElement(Step,{name:key,key:key},react_default.a.createElement(Controls,null,(function(_a){_a.tree;var step=_a.step,destinations=_a.destinations;return react_default.a.createElement("div",null,"I am ",step,react_default.a.createElement("br",null),Object.entries(destinations).map((function(_a){var key=_a[0],value=_a[1];return react_default.a.createElement("button",{key:key,onClick:value},"GO TO ",key)})))})))}))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Examples.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),HooksTree=addSourceDecorator((function(){var inTree={step1:["step2","sideshow"],sideshow:["step2","step3"],step2:["step3","error"],step3:["step1"],error:["step2"]},StepComp=function(_a){var value=_a.value,_b=useControls(),step=_b.step,destinations=(_b.tree,_b.destinations);return react_default.a.createElement(Step,{name:value},react_default.a.createElement("div",null,"I am ",step,react_default.a.createElement("br",null),Object.entries(destinations).map((function(_a){var key=_a[0],value=_a[1];return react_default.a.createElement("button",{key:key,onClick:value},"GO TO ",key)}))))};return react_default.a.createElement(Wizard,{first:"step1",tree:inTree},Object.keys(inTree).map((function(key){return react_default.a.createElement(StepComp,{key:key,value:key})})))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Examples.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),PassedDataTree=addSourceDecorator((function(){return react_default.a.createElement(Wizard,{tree:{step1:["step2"],step2:["step3"],step3:["step1"]},first:"step1",initialData:1},react_default.a.createElement(Step,{name:"step1"},react_default.a.createElement("div",null,"I am step 1",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step2=_a.destinations.step2,data=_a.data;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){step2(data+1)}},"Go to Step 1"))})))),react_default.a.createElement(Step,{name:"step2"},react_default.a.createElement("div",null,"I am step 2",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step3=_a.destinations.step3,data=_a.data;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){step3(data+1)}},"Go to Step 3"))})))),react_default.a.createElement(Step,{name:"step3"},react_default.a.createElement("div",null,"I am step 3",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step1=_a.destinations.step1,data=_a.data;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){step1(data+1)}},"Go to Step 1"))})))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Examples.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),PassedDataTreeWithBack=addSourceDecorator((function(){return react_default.a.createElement(Wizard,{tree:{step1:["step2"],step2:["step3","stepX"],stepX:[],step3:[]},first:"step1",initialData:1},react_default.a.createElement("div",null,"The last lazer master"),react_default.a.createElement(Step,{name:"step1"},react_default.a.createElement("div",null,"I am step 1",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var step2=_a.destinations.step2,data=_a.data;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){step2(data+1)}},"Go to Step 2"))})))),react_default.a.createElement(Step,{name:"step2"},react_default.a.createElement("div",null,"I am step 2",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var _b=_a.destinations,step3=_b.step3,stepX=_b.stepX,data=_a.data;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){step3(data+1)}},"Go to Step 3"),react_default.a.createElement("button",{onClick:function(){stepX(data+1)}},"Go to Step X"))})))),react_default.a.createElement(Step,{name:"stepX"},react_default.a.createElement("div",null,"I am step X",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var data=_a.data,back=_a.back;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){back(999)}},"Go back"))})))),react_default.a.createElement(Step,{name:"step3"},react_default.a.createElement("div",null,"I am step 3",react_default.a.createElement("br",null),react_default.a.createElement(Controls,null,(function(_a){var data=_a.data,back=_a.back;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",null,"You have been to ",data," steps."),react_default.a.createElement("button",{onClick:function(){back()}},"Go to Step 1"))})))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/Examples.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},439:function(module,exports,__webpack_require__){__webpack_require__(440),__webpack_require__(583),__webpack_require__(584),__webpack_require__(1236),module.exports=__webpack_require__(1237)},502:function(module,exports){}},[[439,1,2]]]);
//# sourceMappingURL=main.5843efcca0fb8d088ec6.bundle.js.map