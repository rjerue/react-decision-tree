"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=(e=require("react"))&&"object"==typeof e&&"default"in e?e.default:e;function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var r=t.createContext({tree:{},step:"",setStep:function(){},getControls:function(){return{}},data:{},setData:function(){}});function o(){var e=t.useContext(r),n=e.data;return{step:e.step,tree:e.tree,destinations:(0,e.getControls)(),data:n||void 0}}exports.Controls=function(e){var r=e.children,a=o();return t.createElement(t.Fragment,null,r(n({},a)))},exports.Step=function(e){var n=e.children,r=e.name,a=o(),s=a.step,i=a.tree;return t.useEffect((function(){Object.keys(i).includes(r)||console.warn("Step component with name "+r+" is not found in step tree!")}),[r,i]),t.createElement(t.Fragment,null,s===r&&n)},exports.Wizard=function(e){var o=e.children,a=e.tree,s=e.first,i=e.initialData,u=void 0===i?null:i;t.useEffect((function(){Object.keys(a).includes(s)||console.warn("First step "+s+" is now found in tree as key")}),[s,a]),t.useEffect((function(){var e=Object.keys(a);Object.entries(a).forEach((function(t){var n=t[0];t[1].forEach((function(t){e.includes(t)||console.warn("Tree definition includes path to "+t+" from "+n+". However "+t+" is not in tree as a key.")}))}))}),[a]);var c=t.useState(s),f=c[0],l=c[1],p=t.useState(u),d=p[1];return t.createElement(r.Provider,{value:{tree:a,step:f,setStep:l,getControls:function(){return a[f].reduce((function(e,t){var r;return n({},e,{},((r={})[t]=function(e){l(t),e&&d(e)},r))}),{})},data:p[0],setData:d}},o)},exports.WizardContext=r,exports.useControls=o;
//# sourceMappingURL=react-decision-tree-flow.cjs.production.min.js.map
